@model GestaoClinicaEstetica.Domain.Entidades.Servico

<div class="col-xs-12 col-md-12 col-sm-12 formulario-topo">
    <p class="listagem-titulo">Serviços</p>
</div>

<div class="row formulario-botoes">
    <div class="col-xs-12 col-md-12 col-sm-12">
        <div class="col-xs-3 col-sm-3 col-md-3 text-left">
            <a class="btn botao-acao" href="@Url.Action("Index")"><i class="fa fa-undo"></i> Voltar</a>
        </div>
        <div class="col-xs-9 col-sm-9 col-md-9 text-right">
            <a class="btn botao-acao botao-acao-salvar" onclick="SalvarFormulario()"><i class="fa fa-save"></i> Salvar</a>
        </div>
    </div>
</div>

<div class="col-xs-12 col-md-12 col-sm-12 formulario-conteudo">
    <div class="col-xs-12 col-md-12 col-sm-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-inline">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.DataCadastro)
            @Html.HiddenFor(model => model.UsuarioCadastro)
            @Html.HiddenFor(model => model.DataAlteracao)
            @Html.HiddenFor(model => model.UsuarioAlteracao)

            <div class="form-group col-xs-12 col-md-12 col-sm-12">
                <label class="control-label label-obrigatorio">Descrição</label>
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-md-12 col-sm-12">
                <label class="control-label label-obrigatorio">Especialidade</label>
                @Html.DropDownListFor(model => model.CodigoEspecialidade, new SelectList(ViewBag.ListaEspecialidades, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodigoEspecialidade, "", new { @class = "text-danger" })
            </div>


            <div class="form-group col-xs-12 col-md-4 col-sm-6">
                <label class="control-label label-obrigatorio">Valor do serviço</label>
                @Html.EditorFor(model => model.ValorServico, new { htmlAttributes = new { @class = "form-control money2" } })
                @Html.ValidationMessageFor(model => model.ValorServico, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-md-4 col-sm-4">
                <label class="control-label label-obrigatorio">Periodicidade</label>
                @Html.EnumDropDownListFor(model => model.Periodicidade, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Periodicidade, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-md-4 col-sm-4">
                <label class="control-label label-obrigatorio">Quantidade de Sessões</label>
                @Html.EditorFor(model => model.QuantidadeSessoes, new { htmlAttributes = new { @class = "form-control money2" } })
                @Html.ValidationMessageFor(model => model.Periodicidade, "", new { @class = "text-danger" })
            </div>

        </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
